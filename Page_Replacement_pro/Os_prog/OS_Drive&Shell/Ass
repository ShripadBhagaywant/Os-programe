#include<stdio.h>
#include<stdlib.h>
#include<string.h>

int main()
{
	FILE*fp;
	int code;
	char t1[30],t2[30],t3[30],mem[300];
	fp=fopen("ass.txt","r");
	if(fp==NULL)
	{
		printf("\n File Opening error");
		return 0;
	}
	while(!feof(fp))
	{
		fget(mem/300,fp);
		scanf(mem,"%s","%s","%s",&t1,&t2,&t3);
	}
	if((strcmp(t1,"ADD")==0)|| (strcmp(t1,"SUB")==0)|| (strcmp(t1,"MULT")==0)|| (strcmp(t1,"DIV")==0)|| (strcmp(t1,"MOVER")==0)|| (strcmp(t1,"MOVEM")==0)|| (strcmp(t1,"COMP")==0))
	{
		code 1;
	}
	else if((strcmp(t1,"BC")==0))
	{
		code 2;
	}
	else if((strcmp(t1,"READ")==0)||(strcmp(t1,"PRINT")==0))
	{
		code 3;
	}
	else if((strcmp(t1,"START")==0)||(strcmp(t1,"END")==0))
	{
		code 4;
	}
	else if((strcmp(t2,"DS")==0)||(strcmp(t2,"END")==0))
	{
		code 5;
	}
	else if((strcmp(t1,"STOP")==0))
	{
		code 6;
	}
	else
	{
		code 7;
	}
	switch(code)
	{
		case 1:

			if(((strcmp(t2,"AREG")==0||(strcmp(t2,"BREG")==0||(strcmp(t2,"CREG")==0||(strcmp(t2,"DREG"))&& t3>0))
			{}
			else
			{
				printf("\n\t invalid Start %s",t1);
			}
		break;
		
		case 2:
			if(((strcmp(t2,"LT")==0||(strcmp(t2,"LE")==0||(strcmp(t2,"EG")==0||(strcmp(t2,"GT")==0||(strcmp(t2,"ANY")==0)&& t3>0))
			{}
			else
			{
				printf("\n\tinvalid start %s",t1);
			}
		break;
		case 3:
			if(((t2>0)|| strcmp(t3,"")==0))
			{}
			else
			{
				printf("\n\t invalid start%s",t1);
			}
			if(strcmp(t2,"")==0)
			{
				printf("invalid start%s",t1);
			}
		break;
		case 4:
			if(((strcmp(t2,"START")==0||(strcmp(t2,"END")==0))
				{}
			else
			{
				printf("\n\t invalid start%s",t1);
			}
		break;
		case 5:
			if(t1>0)
			{}
			else
			{
				printf("\n\t invalid start%s",t1);
			}
		break;
		case 6:
			if(t2>0)
			{}
			else
			{
				printf("\n\t invalid start%s",t1);
			}
		break;
		case 7:
				printf("\n\t invalid start%s",t1);
		break;
					
	}
	fclose(fp);
	
}